{"version":3,"sources":["components/Subtotal/Subtotal.jsx","components/PickupSavings/PickupSavings.jsx","components/TaxesFees/TaxesFees.jsx","components/EstimatedTotal/EstimatedTotal.jsx","components/itemDetails/itemDetails.jsx","store/actions.js","components/PromoCode/PromoCode.jsx","App.js","store/reducer.js","store/index.js","serviceWorker.js","index.js"],"names":["Subtotal","react_default","a","createElement","Row","className","Col","md","concat","this","props","price","Component","styles","pickupsavings","textDecoration","totalSavings","color","fontWeight","PickupSavings","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","tooltip","Tooltip","id","OverlayTrigger","placement","overlay","style","TaxesFees","taxes","EstimatedTotal","itemDetails","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","state","open","handleClick","setState","Button","bsStyle","onClick","Collapse","in","Well","Media","Left","width","height","alt","src","Body","handleChange","e","dispatch","type","payload","target","PromoCode","disabledPromoButton","giveDiscountHandler","promoCode","discountHandler","Form","FormGroup","controlId","ControlLabel","FormControl","placeholder","onChange","block","disabled","connect","App","total","estimatedTotal","componentDidMount","Grid","Subtotal_Subtotal","toFixed","components_PickupSavings_PickupSavings","components_TaxesFees_TaxesFees","components_EstimatedTotal_EstimatedTotal","components_itemDetails_itemDetails","components_PromoCode_PromoCode","initState","rootReducer","undefined","action","objectSpread","store","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddf31b47.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Row, Col} from 'react-bootstrap'\n\nexport default class Subtotal extends Component {\n  render() {\n    return (\n      <Row className=\"show-grid\">\n        <Col md={6}>Subtotal</Col>\n        <Col md={6}>{`$ ${this.props.price}`}</Col>\n      </Row>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Row, Col, Tooltip, OverlayTrigger} from 'react-bootstrap';\n\nvar styles = {\n    pickupsavings:{\n        textDecoration:'underline'\n    },\n    totalSavings:{\n        color:'red',\n        fontWeight:800\n    }\n}\nexport class PickupSavings extends Component {\n  render() {\n      const tooltip =\n      <Tooltip id=\"tooltip\">\n        <p>Picking up your order</p>\n      </Tooltip>\n    return (\n      <div>\n        <Row className=\"show-grid\">\n            <Col md={6}>\n                <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\n                    <div style={styles.pickupsavings}>Pickup Savings</div>\n                </OverlayTrigger>\n            </Col>\n            <Col style={styles.totalSavings} md={6}>{`$ ${this.props.price}`}</Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default PickupSavings\n","import React, { Component } from 'react'\nimport { Row, Col} from 'react-bootstrap';\n\nexport class TaxesFees extends Component {\n  render() {\n    return (\n      <div>\n        <Row className=\"show-grid\">\n            <Col md={6}>Est. taxes & fees (Based on 94500)</Col>\n            <Col md={6}>{`$ ${this.props.taxes}`}</Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default TaxesFees\n","import React, { Component } from 'react'\nimport { Row, Col} from 'react-bootstrap'\n\n\nexport class EstimatedTotal extends Component {\n  render() {\n    return (\n      <div>\n        <Row >\n            <Col md={6}><h2>Est, Total</h2></Col>\n            <Col md={6}><h2>{`$ ${this.props.price}`}</h2></Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default EstimatedTotal\n","import React, { Component } from 'react'\nimport { Button, Collapse, Well, Media, Row, Col } from 'react-bootstrap';\n\nexport class itemDetails extends Component {\n\n state = {\n     open:false\n }\n\n handleClick = () => {\n     this.setState({ open:!this.state.open  });\n }\n  render() {\n    return (\n      <div>\n        <Button \n          className=\"item-detail-button\" \n          bsStyle=\"link\"\n          onClick={this.handleClick}\n          >\n            {this.state.open === false ? `See`:`Hide`} item details\n            {this.state.open === false ? ' +': ` -`}\n        </Button>\n        <Collapse in={this.state.open}>\n            <div>\n                <Well>\n                    <Media>\n                        <Media.Left>\n                            <img\n                                width={100}\n                                height={100}\n                                alt=\"thumbnail\"\n                                src=\"https://i5.walmartimages.com/asr/f9c3bfa1-92f4-45c0-b49e-97726d716990_1.8f26d7c5bc472a527fc02bba96e14566.jpeg?odnWidth=undefined&odnHeight=undefined&odnBg=ffffff\"\n                            />\n                        </Media.Left>\n                        <Media.Body>\n                            <p>Essential by OFM-2006 Racing style leather chair Gaming, Red</p>\n                            <Row className=\"show-grid\">\n                                <Col md={6}>\n                                    <strong>{`$ ${this.props.price}`}</strong>\n                                    <br/>\n                                    <strong className=\"price-strike\">{`$ ${this.props.price}`}</strong>\n                                </Col>\n                                <Col md={6}>\n                                    Qty : 1 \n                                </Col>\n                            </Row>\n                        </Media.Body>\n                    </Media>\n                </Well>    \n            </div>\n        </Collapse>\n      </div>\n    )\n  }\n}\n\nexport default itemDetails\n","\nexport const PROMO_CODE = 'PROMO_CODE'\n\nexport const handleChange = e => dispatch => {\n    dispatch({\n        type:PROMO_CODE,\n        payload:e.target.value\n    })\n}","import React, { Component } from 'react'\nimport {Button, Collapse, Well, Form, Row, Col, FormGroup, ControlLabel, FormControl} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { handleChange } from '../../store/actions'\n\n\nclass PromoCode extends Component {\n\n    state = {\n        open:false,\n        disabledPromoButton: false,\n    }\n\n  handleClick = () => {\n      this.setState({ open:!this.state.open  });\n  }\n\n    handleChange = (e) => {\n        this.props.dispatch(handleChange(e))\n    }\n\n  giveDiscountHandler = () => {\n      if(this.props.promoCode === 'DISCOUNT') {\n          this.props.discountHandler()\n          this.setState({ \n            disabledPromoButton: true  \n            });\n      }\n  }\n  render() {\n    return (\n      <div>\n        <Button className=\"promo-code-button\"\n                bsStyle=\"link\"\n                onClick={this.handleClick}\n                >\n                {this.state.open === false ? `Apply ` : `Hide `}\n                promo code\n                {this.state.open === false ? ` +` : ` -`}\n                </Button>\n                <Collapse in={this.state.open}>\n                    <div>\n                        <Well>\n                            <Row className=\"show-grid\">\n                                <Col md={12}>\n                                    <Form>\n                                        <FormGroup controlId=\"formInlineName\">\n                                            <ControlLabel>Promo Code</ControlLabel>\n                                            <FormControl\n                                                type=\"text\"\n                                                placeholder=\"Enter Promo Code\"\n                                                value={this.props.promoCode}\n                                                onChange={this.handleChange}\n                                            />\n                                            <br/>\n                                            <Button\n                                            block\n                                            bsStyle=\"success\"\n                                            className=\"btn-round\"\n                                            disabled={this.state.disabledPromoButton}\n                                            onClick={this.giveDiscountHandler}\n                                            >\n                                            Apply\n                                            </Button>\n                                           \n                                        </FormGroup>\n                                    </Form>\n                                </Col>\n                            </Row>\n                        </Well>\n                    </div>\n                </Collapse>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n    promoCode:state.value\n})\nexport default connect(mapStateToProps)(PromoCode)\n","import React, { Component } from 'react';\nimport {Grid} from 'react-bootstrap';\nimport Subtotal from './components/Subtotal/Subtotal'\nimport PickupSavings from './components/PickupSavings/PickupSavings'\nimport TaxesFees from './components/TaxesFees/TaxesFees';\nimport EstimatedTotal from './components/EstimatedTotal/EstimatedTotal';\nimport ItemDetails from './components/itemDetails/itemDetails';\nimport PromoCode from './components/PromoCode/PromoCode';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { handleChange } from './store/actions'\n\nclass App extends Component {\n\n  state = {\n    total:100,\n    PickupSavings:-3.86,\n    taxes:0,\n    estimatedTotal:0,\n  }\n\n  componentDidMount = () => {\n    this.setState({ \n      taxes:(this.state.total + this.state.PickupSavings) * 0.0875 \n    }, \n      function() {\n        this.setState({ \n        estimatedTotal:this.state.total + this.state.PickupSavings + this.state.taxes  \n        });\n      });\n  }\n\n  giveDiscountHandler = () => {\n        this.setState({ \n           estimatedTotal :  this.state.estimatedTotal * 0.9\n          })\n  }\n\n  render() {\n    return (\n     <div className=\"contaniner \">\n        <Grid className=\"purchase-card\">\n          <Subtotal price={this.state.total.toFixed(2)}/>\n          <PickupSavings price={this.state.PickupSavings}/>\n          <TaxesFees taxes={this.state.taxes.toFixed(2)}/>\n          <hr/>\n          <EstimatedTotal price={this.state.estimatedTotal.toFixed(2)}/>\n          <ItemDetails price={this.state.estimatedTotal.toFixed(2)}/>\n          <hr/>\n          <PromoCode\n            estimatedTotal={this.state.estimatedTotal}\n            discountHandler={this.giveDiscountHandler}\n          />\n        </Grid>\n     </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  promoCode:state.value\n})\n\n\nexport default connect(mapStateToProps, {handleChange})(App);\n","import { PROMO_CODE } from './actions'\n\nconst initState = {\n    value:''\n}\n\nconst rootReducer = (state=initState, action) => {\n    switch(action.type){\n        case PROMO_CODE:\n            return {\n                ...state,\n                value:action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer","import { createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducer';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store/index'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}